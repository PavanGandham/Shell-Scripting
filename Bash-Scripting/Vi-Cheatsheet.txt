#--------------------------------------VI “Cheat” Sheet------------------------------------------------------------------------------


                                :w name Write edit buffer to file name
                                :wq Write to file and quit
1.File management commands      :q! Quit without saving changes
                                ZZ Same as :wq
                                :sh Execute shell commands (<ctrl>d)


                                <ctrl>d Scroll down (half a screen)
                                <ctrl>u Scroll up (half a screen)
                                <ctrl>f Page forward
2.Window motions                <ctrl>b Page backward
                                /string Search forward
                                ?string Search backward
                                <ctrl>l Redraw screen
                                <ctrl>g Display current line number and

                                n Repeat search
                                N Repeat search reverse
                                G Go to last line
3.file information              nG Go to line n
                                :n Go to line n
                                z<CR> Reposition window: cursor at top
                                z. Reposition window: cursor in middle
                                z- Reposition window: cursor at bottom


                                H Upper left corner (home)
                                M Middle line
                                L Lower left corner
                                h Back a character
                                j Down a line
4.Cursor motions                k Up a line
                                ^ Beginning of line
                                $ End of line
                                l Forward a character
                                w One word forward
                                b Back one word
                                fc Find c
                                ; Repeat find (find next c)


5.Command mode versus input mode 

Vi starts in command mode. The positioning commands operate only while vi is in command mode. You switch vi to input mode by entering 
any one of several vi input commands. (See next section.) Once in input mode, any character you type is taken to be text 
and is added to the file. You cannot execute any commands until you exit input mode.To exit input mode, press the escape (Esc) key.



                                a Append after cursor
                                i Insert before cursor
6.Input commands (end with Esc) o Open line below
                                O Open line above
                                :r file Insert file after current line

####Any of these commands leaves vi in input mode until you press Esc. Pressing the RETURN key will not take you out of input mode.####



                                cw Change word (Esc)
                                cc Change line (Esc) - blanks line
                                c$ Change to end of line
7.Change commands (Input mode)  rc Replace character with c
                                R Replace (Esc) - typeover
                                s Substitute (Esc) - 1 char with string
                                S Substitute (Esc) - Rest of line with text
                                . Repeat last change


                                <ctrl>h Back one character
                                <ctrl>w Back one word
8.Changes during insert mode    <ctrl>u Back to beginning of insert
                                vi Editor “Cheat Sheet”
                                Invoking vi: vi filename
                                Format of vi commands: [count][command] (count repeats the effect of the command)


                                dd or ndd Delete n lines to general buffer
                                dw Delete word to general buffer
                                dnw Delete n words
9.Deletion commands             d) Delete to end of sentence
                                db Delete previous word
                                D Delete to end of line
                                x Delete character


                                p Put general buffer after cursor
                                P Put general buffer before cursor
10.Recovering deletions         Undo commands
                                u Undo last change
                                U Undo all changes on line



                                yy or Y Yank (copy) line to general buffer
                                “z6yy Yank 6 lines to buffer z
                                yw Yank word to general buffer
                                “a9dd Delete 9 lines to buffer a
11.Rearrangement commands       “A9dd Delete 9 lines; Append to buffer a
                                “ap Put text from buffer a after cursor
                                p Put general buffer after cursor
                                P Put general buffer before cursor
                                J Join lines


12.Parameters
                                :set list Show invisible characters
                                :set nolist Don’t show invisible characters
                                :set number Show line numbers
                                :set nonumber Don’t show line numbers
                                :set autoindent Indent after carriage return
                                :set noautoindent Turn off autoindent
                                :set showmatch Show matching sets of parentheses as they are typed
                                :set noshowmatch Turn off showmatch
                                :set showmode Display mode on last line of screen
                                :set noshowmode Turn off showmode
                                :set all Show values of all possible parameters



                                            vi old
                                            “a10yy yank 10 lines to buffer a
13.Move text from file old to file new      :w write work buffer
                                            :e new edit new file
                                            “ap put text from a after cursor
                                            :30,60w new Write lines 30 to 60 in file new



                                            ^ Matches beginning of line
                                            $ Matches end of line
14.Regular expressions (search strings)     . Matches any single character
                                            * Matches any previous character
                                            .* Matches any character





                                            Syntax:
                                            :[address]s/old_text/new_text/
                                            Address components:
                                            . Current line
15.Search and replace commands              n Line number n
                                            .+m Current line plus m lines
                                            $ Last line
                                            /string/ A line that contains "string"
                                            % Entire file
                                            [addr1],[addr2] Specifies a range


####################################################Examples:###########################################################################

The following example replaces only the first occurrence of Banana with Kumquat in each of 11 lines
starting with the current line (.) and continuing for the
10 that follow (.+10).

:.,.+10s/Banana/Kumquat

The following example replaces every occurrence
(caused by the g at the end of the command) of
apple with pear.

:%s/apple/pear/g

The following example removes the last character from
every line in the file. Use it if every line in the file ends
with ^M as the result of a file transfer. Execute it
when the cursor is on the first line of the file.

:%s/.$//

#########################################################Extra-Cheates###############################################################

 Movement Commands
Character
h, j, k, l Left, down, up, right

Text
w, W, b, B Forward, backward by word
e, E End of word
(, ) Beginning of next, previous sentence
{, } Beginning of next, previous paragraph
[[, ]] Beginning of next, previous section

Lines
0, $ First, last position of current line
^ First nonblank character of current line
+, - First character of next, previous line
H Top line of screen
M Middle line of screen
L Last line of screen
nH, nL Line n from top, bottom of screen

Scrolling
[Ctrl]F, [Ctrl]B Scroll forward, backward one screen
[Ctrl]D, [Ctrl]U Scroll down, up onehalf screen
[Ctrl]E, [Ctrl]Y Show one more line at bottom, top of window
z[Enter] Scroll until line with cursor is at top of screen
z. Scroll until line with cursor is at middle of screen
z- Scroll until line with cursor is at bottom of screen

Searches
/pattern Search forward for pattern
?pattern Search backward for pattern
n, N Repeat last search in same, opposite direction
/, ? Repeat previous search forward, backward
fx search forward for character x in current line
Fx search backward for character x in current line
tx search forward for character before x in current line
Tx search backward for character after x in current line
; Repeat previous currentline search
, Repeat previous currentline search in opposite direction

Line Number
[Ctrl]G Display current line number
nG Move to line number n
G Move to last line in file
:n move to line number n

Marking Position
mx Mark current position as x
`x Move cursor to x
`` Return to previous mark or context
'x Move to beginning of line containing mark x
'' Return to beggining of line containing previous mark
 
 
 Editing Commands

Insert
i, a Insert text before, after cursor
I, A Insert text at beginning, end of line
o, O Open new line for text below, above cursor

Change
r Replace with next typed characer
~ Change between uppercase and lowercase
cm Change text block defined by movement command m (e.g., cw changes next word)
cc Change current line
C Change to end of line
R Type over characters
s Delete character and continue typing
S Delete current line and continue typing

Delete, Move
x Delete character
X Delete character to the left of the cursor
dm Delete text block defined by movement command m (e.g., dw deletes next word)
dd Delete current line
D Delete to end of line
p, P Put deleted text before, after cursor
"np Put text from delete buffer number n after cursor (for last nine deletions)

Yank (copy)
ym Yank (copy) text block defined by movement command m (e.g., yw yanks next word)
yy, Y Yank current line
"ayy Yank current line into named buffer a
p, P Put yanked text before, after cursor
"aP Put text from buffer a before cursor

Other Commands
. Repeat last edit command
u Undo last edit
U Undo changes to current line
J Join two lines
[Ctrl]L, [Ctrl]R Redraw screen
 
 Invoking vi

vi file Invoke vi editor on file
vi file1 file2 Invoke vi editor on files sequentially
view file Invoke vi editor on file in readonly mode
vi -R file Invoke vi editor on file in readonly mode
vi -r file Recover file and recent edits after system crash
vi + file Open file at last line
vi +n file Open file at line number n
vi +/pattern file Open file at pattern

 Exit and Save Commands

ZZ Save file and quit
:x Save file and quit
:wq Save ("write") file and quit
:w Save file
:w! Save file (overriding protection)
:30,60w newfile Save lines 30 through 60 as file newfile
:30,60w>> file Append lines 30 through 60 to file file
:w %.new Save current buffer named file as file.new
:q Quit
:q! Quit, discarding any changes
Q Quit vi and invoke ex
:e file2 Edit file2 without leaving vi
:e! file2 Discard changes to current file, then edit file2 without leaving vi
:n Edit next file
:e! Discard all changes since last save
:e# Edit alternate file